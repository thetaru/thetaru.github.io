{"remainingRequest":"/root/dev/thetaru.github.io/node_modules/babel-loader/lib/index.js??ref--8-1!/root/dev/thetaru.github.io/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js","dependencies":[{"path":"/root/dev/thetaru.github.io/node_modules/@docusaurus/theme-classic/lib-next/theme/CodeBlock/index.js","mtime":1619934173588},{"path":"/root/dev/thetaru.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1619934173688},{"path":"/root/dev/thetaru.github.io/node_modules/babel-loader/lib/index.js","mtime":1619934173668}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}