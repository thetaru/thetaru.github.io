{"remainingRequest":"/home/thetaru/dev/thetaru.github.io/node_modules/babel-loader/lib/index.js??ref--8-1!/home/thetaru/dev/thetaru.github.io/node_modules/@docusaurus/theme-classic/lib-next/theme/NavbarItem/DefaultNavbarItem.js","dependencies":[{"path":"/home/thetaru/dev/thetaru.github.io/node_modules/@docusaurus/theme-classic/lib-next/theme/NavbarItem/DefaultNavbarItem.js","mtime":1619921903856},{"path":"/home/thetaru/dev/thetaru.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1619921903956},{"path":"/home/thetaru/dev/thetaru.github.io/node_modules/babel-loader/lib/index.js","mtime":1619921903936}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}